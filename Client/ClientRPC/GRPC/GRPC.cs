// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/gRPC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace app.Networking.gRPC {

  /// <summary>Holder for reflection information generated from Protos/gRPC.proto</summary>
  public static partial class GRPCReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/gRPC.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GRPCReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvZ1JQQy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvInkKCFJlc3BvbnNlEhwKBHR5cGUYASABKA4yDi5SZXNwb25zZS5UeXBl",
            "EhUKBXJhY2VyGAMgASgLMgYuUmFjZXISEwoEcmFjZRgEIAEoCzIFLlJhY2Ui",
            "IwoEVHlwZRIGCgJvaxAAEgcKA2FkZBABEgoKBmRlbGV0ZRACIocBCgdSZXF1",
            "ZXN0EhsKBHR5cGUYAyABKA4yDS5SZXF1ZXN0LlR5cGUSFQoFcmFjZXIYBSAB",
            "KAsyBi5SYWNlchITCgRyYWNlGAQgASgLMgUuUmFjZRIMCgR1c2VyGAYgASgJ",
            "IiUKBFR5cGUSCAoEaW5pdBAAEgcKA2FkZBABEgoKBmRlbGV0ZRACImEKCkxv",
            "Z1JlcXVlc3QSHgoEdHlwZRgDIAEoDjIQLkxvZ1JlcXVlc3QuVHlwZRIMCgR1",
            "c2VyGAEgASgJEgwKBHBhc3MYAiABKAkiFwoEVHlwZRIGCgJpbhAAEgcKA291",
            "dBACIgoKCEdldFJhY2VzIgsKCUdldFJhY2VycyJPCgVSYWNlchIKCgJpZBgB",
            "IAEoAxIMCgRuYW1lGAIgASgJEhMKBHRlYW0YAyABKA4yBS5UZWFtEhcKBmVu",
            "Z2luZRgEIAEoDjIHLkVuZ2luZSJLCgRSYWNlEgoKAmlkGAEgASgDEhcKBmVu",
            "Z2luZRgCIAEoDjIHLkVuZ2luZRIMCgREYXRlGAMgASgJEhAKCG5vUmFjZXJz",
            "GAQgASgNKisKBkVuZ2luZRIJCgVtNzVjbRAAEgoKBm0xMjVjbRABEgoKBm0y",
            "NTBjbRACKjcKBFRlYW0SCwoHUmVkQnVsbBAAEgoKBlRveW90YRABEgsKB01h",
            "bGJvcm8QAhIJCgVQZXBzaRADMsIBCghJU2VydmljZRIfCgVsb2dpbhILLkxv",
            "Z1JlcXVlc3QaCS5SZXNwb25zZRIgCgZsb2dvdXQSCy5Mb2dSZXF1ZXN0Ggku",
            "UmVzcG9uc2USJwoRZ2V0QXZhaWxhYmxlUmFjZXMSCS5HZXRSYWNlcxoFLlJh",
            "Y2UwARIlCg1maW5kQWxsUmFjZXJzEgouR2V0UmFjZXJzGgYuUmFjZXIwARIj",
            "CghtYWtlQ2FsbBIILlJlcXVlc3QaCS5SZXNwb25zZSgBMAFCMAoQYXBwLk5l",
            "dHdvcmsuZ1JQQ0IEZ1JQQ1ABqgITYXBwLk5ldHdvcmtpbmcuZ1JQQ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::app.Networking.gRPC.Engine), typeof(global::app.Networking.gRPC.Team), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.Response), global::app.Networking.gRPC.Response.Parser, new[]{ "Type", "Racer", "Race" }, null, new[]{ typeof(global::app.Networking.gRPC.Response.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.Request), global::app.Networking.gRPC.Request.Parser, new[]{ "Type", "Racer", "Race", "User" }, null, new[]{ typeof(global::app.Networking.gRPC.Request.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.LogRequest), global::app.Networking.gRPC.LogRequest.Parser, new[]{ "Type", "User", "Pass" }, null, new[]{ typeof(global::app.Networking.gRPC.LogRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.GetRaces), global::app.Networking.gRPC.GetRaces.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.GetRacers), global::app.Networking.gRPC.GetRacers.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.Racer), global::app.Networking.gRPC.Racer.Parser, new[]{ "Id", "Name", "Team", "Engine" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::app.Networking.gRPC.Race), global::app.Networking.gRPC.Race.Parser, new[]{ "Id", "Engine", "Date", "NoRacers" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Engine {
    [pbr::OriginalName("m75cm")] M75Cm = 0,
    [pbr::OriginalName("m125cm")] M125Cm = 1,
    [pbr::OriginalName("m250cm")] M250Cm = 2,
  }

  public enum Team {
    [pbr::OriginalName("RedBull")] RedBull = 0,
    [pbr::OriginalName("Toyota")] Toyota = 1,
    [pbr::OriginalName("Malboro")] Malboro = 2,
    [pbr::OriginalName("Pepsi")] Pepsi = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      racer_ = other.racer_ != null ? other.racer_.Clone() : null;
      race_ = other.race_ != null ? other.race_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::app.Networking.gRPC.Response.Types.Type type_ = global::app.Networking.gRPC.Response.Types.Type.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Response.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "racer" field.</summary>
    public const int RacerFieldNumber = 3;
    private global::app.Networking.gRPC.Racer racer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Racer Racer {
      get { return racer_; }
      set {
        racer_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 4;
    private global::app.Networking.gRPC.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Racer, other.Racer)) return false;
      if (!object.Equals(Race, other.Race)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::app.Networking.gRPC.Response.Types.Type.Ok) hash ^= Type.GetHashCode();
      if (racer_ != null) hash ^= Racer.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::app.Networking.gRPC.Response.Types.Type.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (racer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Racer);
      }
      if (race_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Race);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::app.Networking.gRPC.Response.Types.Type.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (racer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Racer);
      }
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::app.Networking.gRPC.Response.Types.Type.Ok) {
        Type = other.Type;
      }
      if (other.racer_ != null) {
        if (racer_ == null) {
          Racer = new global::app.Networking.gRPC.Racer();
        }
        Racer.MergeFrom(other.Racer);
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::app.Networking.gRPC.Race();
        }
        Race.MergeFrom(other.Race);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::app.Networking.gRPC.Response.Types.Type) input.ReadEnum();
            break;
          }
          case 26: {
            if (racer_ == null) {
              Racer = new global::app.Networking.gRPC.Racer();
            }
            input.ReadMessage(Racer);
            break;
          }
          case 34: {
            if (race_ == null) {
              Race = new global::app.Networking.gRPC.Race();
            }
            input.ReadMessage(Race);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("ok")] Ok = 0,
        [pbr::OriginalName("add")] Add = 1,
        [pbr::OriginalName("delete")] Delete = 2,
      }

    }
    #endregion

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      racer_ = other.racer_ != null ? other.racer_.Clone() : null;
      race_ = other.race_ != null ? other.race_.Clone() : null;
      user_ = other.user_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::app.Networking.gRPC.Request.Types.Type type_ = global::app.Networking.gRPC.Request.Types.Type.Init;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Request.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "racer" field.</summary>
    public const int RacerFieldNumber = 5;
    private global::app.Networking.gRPC.Racer racer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Racer Racer {
      get { return racer_; }
      set {
        racer_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 4;
    private global::app.Networking.gRPC.Race race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Race Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 6;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Racer, other.Racer)) return false;
      if (!object.Equals(Race, other.Race)) return false;
      if (User != other.User) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::app.Networking.gRPC.Request.Types.Type.Init) hash ^= Type.GetHashCode();
      if (racer_ != null) hash ^= Racer.GetHashCode();
      if (race_ != null) hash ^= Race.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::app.Networking.gRPC.Request.Types.Type.Init) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (race_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Race);
      }
      if (racer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Racer);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::app.Networking.gRPC.Request.Types.Type.Init) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (racer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Racer);
      }
      if (race_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Race);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::app.Networking.gRPC.Request.Types.Type.Init) {
        Type = other.Type;
      }
      if (other.racer_ != null) {
        if (racer_ == null) {
          Racer = new global::app.Networking.gRPC.Racer();
        }
        Racer.MergeFrom(other.Racer);
      }
      if (other.race_ != null) {
        if (race_ == null) {
          Race = new global::app.Networking.gRPC.Race();
        }
        Race.MergeFrom(other.Race);
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            Type = (global::app.Networking.gRPC.Request.Types.Type) input.ReadEnum();
            break;
          }
          case 34: {
            if (race_ == null) {
              Race = new global::app.Networking.gRPC.Race();
            }
            input.ReadMessage(Race);
            break;
          }
          case 42: {
            if (racer_ == null) {
              Racer = new global::app.Networking.gRPC.Racer();
            }
            input.ReadMessage(Racer);
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("init")] Init = 0,
        [pbr::OriginalName("add")] Add = 1,
        [pbr::OriginalName("delete")] Delete = 2,
      }

    }
    #endregion

  }

  public sealed partial class LogRequest : pb::IMessage<LogRequest> {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest(LogRequest other) : this() {
      type_ = other.type_;
      user_ = other.user_;
      pass_ = other.pass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::app.Networking.gRPC.LogRequest.Types.Type type_ = global::app.Networking.gRPC.LogRequest.Types.Type.In;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.LogRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pass" field.</summary>
    public const int PassFieldNumber = 2;
    private string pass_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pass {
      get { return pass_; }
      set {
        pass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (User != other.User) return false;
      if (Pass != other.Pass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::app.Networking.gRPC.LogRequest.Types.Type.In) hash ^= Type.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Pass.Length != 0) hash ^= Pass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (User.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(User);
      }
      if (Pass.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Pass);
      }
      if (Type != global::app.Networking.gRPC.LogRequest.Types.Type.In) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::app.Networking.gRPC.LogRequest.Types.Type.In) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Pass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::app.Networking.gRPC.LogRequest.Types.Type.In) {
        Type = other.Type;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Pass.Length != 0) {
        Pass = other.Pass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            User = input.ReadString();
            break;
          }
          case 18: {
            Pass = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::app.Networking.gRPC.LogRequest.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("in")] In = 0,
        [pbr::OriginalName("out")] Out = 2,
      }

    }
    #endregion

  }

  public sealed partial class GetRaces : pb::IMessage<GetRaces> {
    private static readonly pb::MessageParser<GetRaces> _parser = new pb::MessageParser<GetRaces>(() => new GetRaces());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRaces> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRaces() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRaces(GetRaces other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRaces Clone() {
      return new GetRaces(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRaces);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRaces other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRaces other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetRacers : pb::IMessage<GetRacers> {
    private static readonly pb::MessageParser<GetRacers> _parser = new pb::MessageParser<GetRacers>(() => new GetRacers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRacers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRacers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRacers(GetRacers other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRacers Clone() {
      return new GetRacers(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRacers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRacers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRacers other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Racer : pb::IMessage<Racer> {
    private static readonly pb::MessageParser<Racer> _parser = new pb::MessageParser<Racer>(() => new Racer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Racer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Racer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Racer(Racer other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      team_ = other.team_;
      engine_ = other.engine_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Racer Clone() {
      return new Racer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 3;
    private global::app.Networking.gRPC.Team team_ = global::app.Networking.gRPC.Team.RedBull;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Team Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "engine" field.</summary>
    public const int EngineFieldNumber = 4;
    private global::app.Networking.gRPC.Engine engine_ = global::app.Networking.gRPC.Engine.M75Cm;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Engine Engine {
      get { return engine_; }
      set {
        engine_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Racer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Racer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Team != other.Team) return false;
      if (Engine != other.Engine) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Team != global::app.Networking.gRPC.Team.RedBull) hash ^= Team.GetHashCode();
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) hash ^= Engine.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Team != global::app.Networking.gRPC.Team.RedBull) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Team);
      }
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Engine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Team != global::app.Networking.gRPC.Team.RedBull) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Engine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Racer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Team != global::app.Networking.gRPC.Team.RedBull) {
        Team = other.Team;
      }
      if (other.Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        Engine = other.Engine;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Team = (global::app.Networking.gRPC.Team) input.ReadEnum();
            break;
          }
          case 32: {
            Engine = (global::app.Networking.gRPC.Engine) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Race : pb::IMessage<Race> {
    private static readonly pb::MessageParser<Race> _parser = new pb::MessageParser<Race>(() => new Race());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Race> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::app.Networking.gRPC.GRPCReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race(Race other) : this() {
      id_ = other.id_;
      engine_ = other.engine_;
      date_ = other.date_;
      noRacers_ = other.noRacers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Race Clone() {
      return new Race(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "engine" field.</summary>
    public const int EngineFieldNumber = 2;
    private global::app.Networking.gRPC.Engine engine_ = global::app.Networking.gRPC.Engine.M75Cm;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::app.Networking.gRPC.Engine Engine {
      get { return engine_; }
      set {
        engine_ = value;
      }
    }

    /// <summary>Field number for the "Date" field.</summary>
    public const int DateFieldNumber = 3;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "noRacers" field.</summary>
    public const int NoRacersFieldNumber = 4;
    private uint noRacers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NoRacers {
      get { return noRacers_; }
      set {
        noRacers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Race);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Race other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Engine != other.Engine) return false;
      if (Date != other.Date) return false;
      if (NoRacers != other.NoRacers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) hash ^= Engine.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (NoRacers != 0) hash ^= NoRacers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Engine);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Date);
      }
      if (NoRacers != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(NoRacers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Engine);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (NoRacers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NoRacers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Race other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Engine != global::app.Networking.gRPC.Engine.M75Cm) {
        Engine = other.Engine;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.NoRacers != 0) {
        NoRacers = other.NoRacers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Engine = (global::app.Networking.gRPC.Engine) input.ReadEnum();
            break;
          }
          case 26: {
            Date = input.ReadString();
            break;
          }
          case 32: {
            NoRacers = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
